name: Generate unstable API

# Slight delay to avoid collisions in the git history while updating
on:
  schedule:
    - cron: "10 0 * * *"
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Download OpenAPI file
        run: curl -s https://api.jellyfin.org/openapi/jellyfin-openapi-unstable.json > openapi.json

      - name: Modify the schema
        run: node scripts/modifySchema.mjs openapi.json

      - name: Generate
        uses: docker://openapitools/openapi-generator-cli:latest-release
        env:
          TS_POST_PROCESS_FILE: true
        with:
          args: >-
            generate -i /github/workspace/openapi.json
            -g typescript-axios --additional-properties=npmName=@jellyfin/client-axios
            --additional-properties=npmRepository=https://www.npmjs.com/package/@jellyfin/client-axios
            --additional-properties=supportsES6=true
            --additional-properties=useSingleRequestParameter=true
            --additional-properties=withSeparateModelsAndApi=true
            --additional-properties=modelPackage=models
            --additional-properties=apiPackage=api
            --enable-post-process-file
            -o /github/workspace/unstable

      - name: Get server commit hash
        id: sha
        run: |
          SERVER_SHA="$(git ls-remote git://github.com/jellyfin/jellyfin.git | grep refs/heads/master | cut -f 1)"
          echo "::set-output name=sha::$(echo ${SERVER_SHA::7})"

      - name: Check if .ts files were modified
        id: diff
        run: echo "::set-output name=count::$(git status -s | grep ts | wc -l)"

      - name: Get OpenApi version
        if: ${{ steps.diff.outputs.count }} > 0
        id: apiversion
        run: |
          SERVER_VERSION="$(cat openapi.json | jq '.info.version')"
          echo "::set-output name=number::$(echo ${SERVER_VERSION::-1})"

      - name: Create new version string
        if: ${{ steps.diff.outputs.count }} > 0
        id: version
        run: echo "::set-output name=number::$(echo ${{ steps.apiversion.outputs.number }}-unstable+${{ steps.sha.outputs.sha }}")"

      - name: Set version in package.json
        if: ${{ steps.diff.outputs.count }} > 0
        run: |
          echo "$(cat unstable/package.json | jq '.version = "${{ steps.version.outputs.number }}"')" > unstable/package.json
          echo "$(cat unstable/package-lock.json | jq '.version = "${{ steps.version.outputs.number }}"')" > unstable/package-lock.json

      - name: Setup node environment
        if: ${{ steps.diff.outputs.count }} > 0
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          cache: "npm"
          cache-dependency-path: unstable/package-lock.json

      - name: Install dependencies
        if: ${{ steps.diff.outputs.count }} > 0
        run: npm ci --no-audit
        working-directory: ./unstable

      - name: Build
        if: ${{ steps.diff.outputs.count }} > 0
        run: npm run build
        working-directory: ./unstable

      # "echo" in commit returns true so the build succeeds, even if no changed files
      - name: Commit new changes to the repo
        if: ${{ steps.diff.outputs.count > 0 && github.event_name != 'pull_request' }}
        run: |
          git config --global user.email "packaging@jellyfin.org"
          git config --global user.name "Jellyfin Packaging Team"
          git pull
          git add .
          git commit -m "Update unstable OpenAPI client" || echo
          git push
