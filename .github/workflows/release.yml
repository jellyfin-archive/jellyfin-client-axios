name: Build and publish to NPM

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: 
          - stable
          - unstable

    steps:
    - uses: actions/checkout@v2.3.4
      with:
        ref: 'master'

    - name: Setup node environment for NPMJS
      uses: actions/setup-node@v2.3.0
      with:
        node-version: 14
        registry-url: 'https://registry.npmjs.org'

    - name: Get npm cache directory path
      id: npm-cache-dir-path
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache node_modules
      uses: actions/cache@v2.1.6
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-npm-${{ hashFiles('**/${{ matrix.version }}/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Get package version
      id: version
      run: echo "::set-output name=number::$(echo $(cat package.json | jq '.version') | tr -d '"')"
      working-directory: ./${{ matrix.version }}

    - name: Install dependencies
      run: npm ci --no-audit
      working-directory: ./${{ matrix.version }}

    - name: Publish to npm
      run: npm publish --tag ${{ matrix.version }} --access public
      working-directory: ./${{ matrix.version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Set as latest in npm
      if: ${{ matrix.version == 'stable' }}
      run: npm dist-tag add @jellyfin/client-axios@${{ steps.version.outputs.number }} latest
      working-directory: ./${{ matrix.version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Setup node environment for GitHub Package Registry
      uses: actions/setup-node@v2.3.0
      with:
        node-version: 14
        registry-url: 'https://npm.pkg.github.com'

    - name: Publish to GitHub Package registry
      run: npm publish --tag ${{ matrix.version }} --access public
      working-directory: ./${{ matrix.version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.ORG_PAT }}

    - name: Set as latest in GitHub Packages
      if: ${{ matrix.version == 'stable' }}
      run: npm dist-tag add @jellyfin/client-axios@${{ steps.version.outputs.number }} latest
      working-directory: ./${{ matrix.version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.ORG_PAT }}
